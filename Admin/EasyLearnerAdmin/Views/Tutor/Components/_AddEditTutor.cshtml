@model EasyLearner.Service.Dto.TutorDto
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<style>
    .onerow {
        display: inline-block;
    }
</style>

<form id="frmTutor" asp-action="AddEditTutor" method="post">

    <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Tutor Creation</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="modal-body">
        <div class="accordian-block border-0">
            <div class="accordian-para acc-show p-2">

                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="Id" name="Id" />
                <div class="form-row mt-0">
                    <div class="form-group col-md-12">
                        <label for="TutorName">Name of Tutor <span class="text-danger">*</span> :</label>
                        <input type="text" asp-for="TutorName" name="TutorName" class="form-control" />
                    </div>


                </div>
                <div class="form-row mt-0">
                    <div class="form-group col-md-12">
                        <label for="TutorName">Mobile number of Tutor <span class="text-danger">*</span>: </label>
                        <input type="text" class="form-control" aria-label="mobileNo" asp-for="MobileNo" aria-describedby="basic-addon1">
                    </div>
                </div>
                @*<div class="form-row mt-0">
                        <div class="form-group col-md-12">
                            <label for="Name">Grade :</label>
                            <select name="GradeId" asp-items="@ViewBag.GradeList" id="GradeId" class="form-control">
                            </select>
                        </div>
                    </div>*@

                @*<div class="form-row mt-0" id="Grade">
                        <div class="form-group col-md-12">
                            <label for="Name">Lesson :</label>
                            <select multiple="multiple" class="multi-select" id="LessonId" asp-items="@(new SelectList(string.Empty, "Value", "Text"))">
                            </select>
                            <input type="text" asp-for="LessonId" id="RelevantLessonId" name="LessonId" hidden />
                        </div>
                    </div>*@
                <div class="form-row mt-0">
                    <div class="form-group col-md-12">
                        <label for="employmentDate">Date of Employeement:</label>
                        @*<input type="text" asp-for="DateofEmployeement" id="DateofEmployeement" name="DateofEmployeement" class="form-control" />*@
                        <input type="text" asp-for="DateofEmployeement" value="" name="DateofEmployeement" class="form-control datepicker" />

                    </div>
                </div>
                <div class="form-row mt-0">
                    <div class="form-group col-md-12">
                        <label for="UserName">User name:</label>
                        <input type="text" asp-for="UserName" name="UserName" class="form-control" />
                    </div>
                </div>
                @if (Model.Id == 0)
                {
                    <div class="form-row mt-0">
                        <div class="form-group col-md-12">
                            <label for="TutorPassword">Password:</label>

                            <input type="password" asp-for="TutorPassword" name="TutorPassword" class="form-control" />
                        </div>
                    </div>
                }
                @*<div class="form-row mt-0 custom-multiselect">
                        <div class="form-group col-md-12">
                            <label for="Name">Relevant Lessons <span class="text-danger">*</span> :</label>
                            <select name="LessonId" asp-for="LessonId" multiple="multiple" class="multi-select" id="LessonId" asp-items="@ViewBag.LessonList">
                            </select>
                            <input type="text" name="RelevantLesson" asp-for="RelevantLesson" id="RelevantLessonId" hidden />
                            <span id="ErrorMessage" style="color:red;" hidden>Please Select Relevant lessons</span>
                        </div>
                    </div>*@
            <div class="form-group col-md-12">
                <label for="Name">Relevant Lessons <span class="text-danger">*</span> :</label>
                <a data-toggle="modal" href="#myModal2" class="btn btn-primary">Add the lesson </a>
                <span id="ErrorMessage" style="color:red;" hidden>Please Select Relevant lessons</span>
            </div>
            </div>
        </div>
        <div class="modal" id="myModal2" data-backdrop="static">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">List of grades and lessons</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    </div><div class="container"></div>
                    <div class="modal-body" id="lesson">

                    </div>
                    <div class="modal-footer">
                        <button type="button" onclick="CloseChildModal()" class="btn btn-outline-primary con_btn mr-auto">Close</button>
                        <a href="javascript:;" class="btn btn-primary lessonSave">Save changes</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="submit" id="btnSave" class="btn btn-outline-primary con_btn active">Creation</button>
            <button type="button" class="btn btn-outline-primary con_btn mr-auto" data-dismiss="modal">Close</button>
        </div>
    </div>
</form>




@*<script src="~/js/bootstrap-multiselect.js"></script>
    <link href="~/css/bootstrap-multiselect.css" rel="stylesheet" />*@


<script src="~/js/bootstrap-datepicker.js"></script>
<link href="~/css/bootstrap-datepicker.css" rel="stylesheet" />

<script src="~/js/jquery.mask.js"></script>



<script type="text/javascript">

    $(document).ready(function ()
    {
         var LessonArray = new Array();
        $('#DateofEmployeement').datepicker({
            changeMonth: true,
            changeYear: true,
            format: "dd/MM/yyyy",
            language: "tr"
        });
        $("#DateofEmployeement").datepicker("setDate", new Date());

        $('input[name="MobileNo"]').mask('00000000000');

           //$('#LessonId').multiselect({
           //         includeSelectAllOption: true
           //});

        //$('#LessonId').change(function () {
        //        var data= $(this).val();
        //        $("#RelevantLessonId").val(data);
        //    });
        bindlessons();
          function CloseChildModal() {
                $('#myModal2').modal('hide');
         }

         function bindlessons() {
            $.get(`/Grades/GetLessonList`, function (response) {
                $.each(response, function (key, value) {
                    var ul = $.parseHTML(`<ul id="g${value.id}"><b>${value.name}</b></ul>`);
                    $.each(value.lessonList, function (lkey, lvalue) {
                       var lessonList ='@Model.RelevantLesson?.ToString()';
                        var isChecked = lessonList === "" ? "" : (lessonList.includes(lvalue.id) ? "checked" : "");
                        if (lessonList.includes(lvalue.id)) {
                            LessonArray.push(lvalue.id);
                        }
                        $(ul).append(`<li>${lvalue.name}  <input class="TutorLessons" ${isChecked} type="checkbox" data-id="${lvalue.id}"/></li>`);

                    });
                    $("#lesson").append(ul);
                });

            });
        }

         $(document).on("click", ".lessonSave", function () {
             $('#myModal2').modal('hide');
         });

         $(document).on("click", ".TutorLessons", function () {
            if ($(this).prop("checked") == true) {
                if(!LessonArray.includes(parseInt($(this).data('id'))))
                    LessonArray.push(parseInt($(this).data('id')));
            }
            if ($(this).prop("checked") == false) {
                if (LessonArray.includes(parseInt($(this).data('id'))))
                   arrayRemove(LessonArray, parseInt($(this).data('id')));
            }
        });


        var validationresult = $("#frmTutor").validate({
            rules: {
                "TutorName": {
                    required: true,
                    normalizer: function (value) {
                        return $.trim(value);
                    }
                },
                "MobileNo": { required: true },
                "DateofEmployeement": {
                    required: true,
                    normalizer: function (value) {
                        return $.trim(value);
                    }
                },
                "UserName": { required: true,alphanumeric:true },
                "TutorPassword": { required: true },
                "LessonId": {required:true}
            },

            messages: {
               "TutorName": {
                    required: "Please enter a Tutor name"
                },
                "LessonId": {required:"Please select Relevant Lesson"},
                 "MobileNo": {
                    required: "Please enter a Mobile Number"
                },
                  "DateofEmployeement": {
                    required: "Please enter a Date Of Employeement"
                },
                   "UserName": {
                    required: "Please enter a User name"
                },
                   "TutorPassword": {
                    required: "Please enter a Password"
                }
            },
            submitHandler: function (form)
            {
                //if ($('#LessonId option:selected').val() == undefined) {
                //    $('#ErrorMessage').removeAttr('hidden');
                //}
                //else {
                //     let post_url = form.action;
                //    let form_data = $(form).serialize();
                //    $.post(post_url, form_data, function (response)
                //    {
                //        Easylearner.HandleResponse(response);
                //        if (response.status === 1) {
                //            closeModal();
                //        }
                //    });
                //}
                    let post_url = form.action;
                var frm = $("#frmTutor");
                var formData = new FormData();
                formData.append("RelevantLesson", JSON.stringify(LessonArray));

                $.each(frm.serializeArray(), function (key, input) {
                    formData.append(input.name, input.value);
                });
                if (LessonArray.length>0) {
                    $.ajax({
                        type: "POST",
                        contentType: false,
                        processData: false,
                        url: post_url,
                        dataType: "JSON",
                        traditional: true,
                        data: formData,
                        success: function (response) {
                            Easylearner.HandleResponse(response);
                            if (response.status === 1) {
                                closeModal();
                                LessonArray = new Array();
                            }

                        }
                    });
                }
                else {
                    $('#ErrorMessage').removeAttr('hidden');
                }
                
            }

        });


    });
</script>