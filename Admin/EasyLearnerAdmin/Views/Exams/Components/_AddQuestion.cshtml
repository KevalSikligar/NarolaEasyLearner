@model EasyLearner.Service.Dto.ExamDto
@{
    Layout = null;
}
@*<link href="~/css/demo.css" rel="stylesheet" />*@
<link href="~/css/jqueryte140.css" rel="stylesheet" />
<form id="frmExam" asp-action="AddQuestion" method="post">
    <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">@(Model.Id == 0 ? "Add" : "Edit") Question to Exam</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="modal-body">
        <div class="accordian-block border-0">
            <div class="accordian-para acc-show p-0">

                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="Id" name="Id" />
                <input type="hidden" asp-for="QuestionId" name="QuestionId" />
                <input type="hidden" asp-for="ExamId" name="ExamId" />
                <div class="form-row mt-0">

                    <div class="form-group col-md-12">
                        <label for="ExamName">Exam  : <b>@Model.ExamNameAndYear </b> <span class="text-danger">*</span></label>

                    </div>
                  
                    <div class="form-group col-md-12">
                    <label for="Question">Type Question  <span class="text-danger">*</span></label>
                    <input type="text" asp-for="Question" name="Question" class="form-control  jqte-test" />

                    </div>
                    <div class="form-group col-md-12">
                    <label for="Answer">Type Answer  <span class="text-danger">*</span></label>
                    <input type="text" asp-for="Answer" name="Answer" class="form-control jqte-test" />

                    </div>
              
                    @if (Model.QuestionId != 0 && !String.IsNullOrWhiteSpace(Model.FileName) || !String.IsNullOrEmpty(Model.FileName))
                    {
                        <div class="form-group col-md-12">
                            <label>Uploading new file will be replace existing file  --->    </label>
                            <a href="javascript:;">@(Model.FileName ?? "") </a>
                        </div>
                    }
                    <div class="form-group col-md-12">
                        <label for="ExamFile">Attachment   <span class="text-danger">*</span></label>
                        <input type="file" asp-for="ExamFile" name="ExamFile" class="form-control" />
                    </div>
                    <div class="form-group col-md-12">
                        <a data-toggle="modal" href="#myModal2" class="btn btn-primary">@(Model.QuestionId == 0 ? "Add" : "Edit") lesson to this question  </a>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <div class="modal" id="myModal2" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Select Lessons</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                </div><div class="container"></div>
                <div class="modal-body" id="lesson">

                </div>
                <div class="modal-footer">
                    <button type="button" onclick="CloseChildModal()" class="btn btn-outline-primary con_btn mr-auto">Close</button>
                    <a href="javascript:;" class="btn btn-primary lessonSave">Save changes</a>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="submit" class="btn btn-outline-primary con_btn active">Save</button>
        <button type="button" class="btn btn-outline-primary con_btn mr-auto" data-dismiss="modal">Close</button>
    </div>
</form>
<script src="~/js/jqueryte140.js"></script>
<script type="text/javascript">
    var LessonArray = new Array();

    function CloseChildModal() {
        $('#myModal2').modal('hide');
    }
    
    $(document).ready(function () {
        //load lessons start
        $('.jqte-test').jqte();
        bindlessons();

        //load lessons end

        $(document).on("click", ".ExamLessons", function () {
            if ($(this).prop("checked") == true) {
                if(!LessonArray.includes(parseInt($(this).data('id'))))
                    LessonArray.push(parseInt($(this).data('id')));
            }
            if ($(this).prop("checked") == false) {
                if (LessonArray.includes(parseInt($(this).data('id'))))
                   arrayRemove(LessonArray, parseInt($(this).data('id')));
            }
        });

        function bindlessons() {
            $.get(`/Grades/GetLessonList`, function (response) {
                $.each(response, function (key, value) {
                    var ul = $.parseHTML(`<ul id="g${value.id}"><b>${value.name}</b></ul>`);
                    $.each(value.lessonList, function (lkey, lvalue) {
                       var lessonList ='@Model.LessonIdList?.ToString()';
                        var isChecked = lessonList === "" ? "" : (lessonList.includes(lvalue.id) ? "checked" : "");
                        if (lessonList.includes(lvalue.id)) {
                            LessonArray.push(lvalue.id);
                        }
                        $(ul).append(`<li>${lvalue.name}  <input class="ExamLessons" ${isChecked} type="checkbox" data-id="${lvalue.id}"/></li>`);

                    });
                    $("#lesson").append(ul);
                });

            });
        }

        var validationresult = $("#frmExam").validate({
            rules: {
                "Question": {
                    required: true,
                    normalizer: function (value) {
                        return $.trim(value);
                    }},
                "Answer": {
                    required: true,
                    normalizer: function (value) {
                        return $.trim(value);
                    }}

            },
            messages: {
                "Question": {
                    required: "Please enter a  Question"
                },
                "Answer": { required: "Please enter a  Answer" }
            },
            submitHandler: function (form) {
                let post_url = form.action;
                var frm = $("#frmExam");
                var formData = new FormData();
                var ExamFile = $("#ExamFile").get(0).files;
                formData.append("ExamFile", ExamFile[0]);
                formData.append("LessonIdList", JSON.stringify(LessonArray));

                $.each(frm.serializeArray(), function (key, input) {
                    formData.append(input.name, input.value);
                });
                $.ajax({
                    type: "POST",
                    contentType: false,
                    processData: false,
                    url: post_url,
                    dataType: "JSON",
                    traditional: true,
                    data: formData,
                    success: function (response) {
                        Easylearner.HandleResponse(response);
                        if (response.status === 1) {
                            closeModal();
                            refreshDatatable("#dtEditQuestion");
                            LessonArray = new Array();
                        }

                    }
                });
            }
        });

    });

    $(document).on("click", ".lessonSave", function () {
        $('#myModal2').modal('hide');
    });

    //$(document).on("click", ".lessonSave", function () {

    //    $.ajax({
    //        url: "/Exams/AddLessonToQuestion",
    //        type: "POST",
    //        data: { LessonIdList: LessonArray ,QuestionId:},
    //        success: function (response) { },
    //        error: function (response) { }
    //    });

    //});



</script>